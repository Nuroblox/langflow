"""Add Tasks and Subscriptions

Revision ID: 02e8c952e7ca
Revises: 4522eb831f5c
Create Date: 2024-08-30 19:12:05.792876

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "02e8c952e7ca"
down_revision: Union[str, None] = "4522eb831f5c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subscription",
        sa.Column("flow_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("event_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("category", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(["flow_id"], ["flow.id"], name="fk_subscription_flow_id"),
        sa.PrimaryKeyConstraint("id", name="pk_subscription"),
    )
    with op.batch_alter_table("subscription", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_subscription_flow_id"), ["flow_id"], unique=False)

    op.create_table(
        "task",
        sa.Column("author_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("assignee_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("category", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(["assignee_id"], ["flow.id"], name="fk_task_assignee_id"),
        sa.ForeignKeyConstraint(["author_id"], ["flow.id"], name="fk_task_author_id"),
        sa.PrimaryKeyConstraint("id", name="pk_task"),
    )
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_task_assignee_id"), ["assignee_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_task_author_id"), ["author_id"], unique=False)

    with op.batch_alter_table("vertex_build", schema=None) as batch_op:
        batch_op.alter_column("id", existing_type=sa.VARCHAR(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("vertex_build", schema=None) as batch_op:
        batch_op.alter_column("id", existing_type=sa.VARCHAR(), nullable=True)

    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_author_id"))
        batch_op.drop_index(batch_op.f("ix_task_assignee_id"))

    op.drop_table("task")
    with op.batch_alter_table("subscription", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_subscription_flow_id"))

    op.drop_table("subscription")
    # ### end Alembic commands ###
